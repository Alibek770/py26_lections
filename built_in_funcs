
# map
# filter
# lambda
# enumerate
# zip, all, any
#(reduce)

# Анонимные функции - lambda(такие же фенкции только без названия)
# lambda функции могут принимать сколько угодно аргументов, но всегда возвращают одно выражение

# def sum_of_args(a,b):
#     res = a + b
#     return res

# a = sum_of_args
# print(a(5,15))

# sum_of_args2 = lambda a,b,c: a + b + c 
# print(sum_of_args2(5,15,20))

c
# x = lambda a,b,c: (a*b) % c
# print(x(11, 5, 10))

# get_last = lambda ls: ls[-1]
# ls = [1,2,3,4,5,6,True, False, [123],'last']
# print(get_last(ls))

# def myFunc(n):
#     return lambda a: a * n 

# myDoubler = myFunc(2)
# myTripler = myFunc(3)
# print(myDoubler(50))
# print(myDoubler(100))
# print(myDoubler(23))
# print(myTripler(55))

# dict_ = {'John': 50_000, 'Sultan':5, 'Jamie':10000000, 'Aigerim': 1_000_000}
# res = sorted(dict_.items(), key = lambda x:x[1])
# print(res)

'------------------------------------------------------------------------------------'

# map(function, iterable) - применяет функцию к каждому элементу из последовотельности
#  и возвращает mapobject(итератор) с результатом 

# ls = ['one', 'two', 'three', 'four']
# # for i in range(0, len(ls)):
# #     ls[i] = ls[i].upper()

# #     print(ls)

# res = list(map(str.upper, ls))
# print(res)

# names = ['John', 'Sultan', 'Jamie', 'Raychel']
# res = list(map(lambda name: f'Hello mr/mrs {name}', names))

# print(res)


# dict_ = {1:2, 3:4, 5:6}

# for k in dict_:
#     dict_[k] = str(dict_[k])

# print(dict_)

# result = map(lambda x: (x[0], str(x[1])), dict_.items())
# print(result)

'---------------------------------------------------------'

# filter(function, iterable) -> применяет ко всем элементам iterable функцию которую мы передали 
# и возвращает итератор с теми элементами для которых функция вернула True


# ls = ['one', 'two', '', 'list', '100', '1', 'john']
# res = []
# for x in ls:
#     if x.isdigit():
#         res.append(x)
# print(res)

# res = list(filter(str.isdigit,res))
# print(res)


# ls = ['John', 'makers', 'Sultan', 'ono', 'py.26', 'Kyrgyzstan', 'mountains']

# res = list(filter(lambda stroka: len(stroka)>5, ls))
# print(res)

# ls = [

#     {'name': 'Python', 'point': 10},
#     {'name': 'C++', 'point': 6},
#     {'name': 'JS', 'point': 8},
#     {'name': 'JAVA', 'point': 3},
#     {'name': 'C#', 'point': 0},
# ]

# res = list(filter(lambda dict_: dict_['point'] >= 7 , ls))
# print(res)

# users = [
#     {'username':'John', 'comments':['I love you', 'Really good']},
#     {'username':'Raychel', 'comments':[]},
#     {'username':'Steven', 'comments':['Bishkek', 'Python']},
#     {'username':'Hello', 'comments':[]},
#     {'username':'Kira', 'comments':['The best post']}
# ]

# inactive_users = list(filter(lambda dict_obj: not dict_obj['comments'], users))

# print(inactive_users)

'-----------------------------------------------------------------------------------'

# names = ['Raychel', 'Sultan', 'Aigerim', 'John', 'Kira', 'Bob']

# longer_names = list(
#     map(
#         lambda name: f'Your name is {name}!',
#         filter(lambda x: len(x) > 4, names))
# )

# print(longer_names)

'-----------------------------------------------------------------------------------'

# from functools import reduce
# ls = [1,2,3,4,5,6]
# sum_ = reduce(lambda a, b: a + b, ls)
# res = reduce(lambda a,b: a*b, ls)
# print(sum_)
# print(res)
'---------------------------------- enumarate -------------------------------------------'

# ls = ['john', 'Sultan', 'Katana', 'Aigerim']
# for i, obj in enumerate(ls):
#     print(i, obj)
# print(enumerate(ls))

'-----------------------------------------------------------------------------'

# import string as s
# import random

# def generate_rand_str():
#     symbols = s.ascii_letters + s.digits
#     res = ''.join(random.choice(symbols) for i in range(0,10))
#     return(res)

# print(generate_rand_str())
# print(generate_rand_str())
# print(generate_rand_str())
# print(generate_rand_str())
# print(generate_rand_str())

'-------------------------------------------------------------------------------'

# from random import choices
# from string import ascii_letters, digits
# from itertools import repeat

# symbols = '_()$!%@#'
# q_pass = int(input('Vvedite kolichestvo paroley: '))

# result = {
#     f(choices(ascii_letters, k=10), choices(digits, k = 5), choices(symbols, k = 2)) for f in repeat(lambda x,y,z: ''.join(set(x+y+z)), q_pass)
# }

# print(result)
# print(f'Quantity of passwords: {len(result)}')

# from statistics import mean
# dlina = [len(x) for x in result]
# print(f'Average len: {mean(dlina)}')

